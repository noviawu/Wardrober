{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/xiaodanwu/Desktop/7th/CS app dev /Wardrober/App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { DefaultTheme, Provider as PaperProvider } from \"react-native-paper\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { AppContext } from \"./AppContext\";\nimport Welcome from \"./screens/Welcome\";\nimport Home from \"./screens/Home\";\nexport default function App(props) {\n  var Stack = createNativeStackNavigator();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  function WelcomeScreen() {\n    return React.createElement(Welcome, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 12\n      }\n    });\n  }\n\n  function HomeScreen() {\n    return React.createElement(Home, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }\n    });\n  }\n\n  var theme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n    roundness: 2,\n    colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n      primary: \"#E89941\",\n      accent: \"#f1c40f\"\n    })\n  });\n\n  useEffect(function () {\n    var getUser = function getUser() {\n      var _user;\n\n      return _regeneratorRuntime.async(function getUser$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"user\"));\n\n            case 3:\n              _user = _context.sent;\n              setUser(_user);\n              _context.next = 11;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(\"error in getUser \");\n              console.dir(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    getUser();\n  }, []);\n  return React.createElement(AppContext.Provider, {\n    value: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, React.createElement(PaperProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Welcome\",\n    component: WelcomeScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/xiaodanwu/Desktop/7th/CS app dev /Wardrober/App.js"],"names":["React","useState","useEffect","NavigationContainer","createNativeStackNavigator","DefaultTheme","Provider","PaperProvider","AsyncStorage","AppContext","Welcome","Home","App","props","Stack","user","setUser","WelcomeScreen","HomeScreen","theme","roundness","colors","primary","accent","getUser","getItem","console","log","dir","headerShown"],"mappings":";;;;;;;;;AAMA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,SAASC,YAAT,EAAuBC,QAAQ,IAAIC,aAAnC,QAAwD,oBAAxD;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAASC,UAAT;AACA,OAAOC,OAAP;AACA,OAAOC,IAAP;AAEA,eAAe,SAASC,GAAT,CAAaC,KAAb,EAAoB;AACjC,MAAMC,KAAK,GAAGV,0BAA0B,EAAxC;;AACA,kBAAwBH,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOc,IAAP;AAAA,MAAaC,OAAb;;AAEA,WAASC,aAAT,GAAyB;AACvB,WAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,WAASC,UAAT,GAAsB;AACpB,WAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,MAAMC,KAAK,mCACNd,YADM;AAETe,IAAAA,SAAS,EAAE,CAFF;AAGTC,IAAAA,MAAM,kCACDhB,YAAY,CAACgB,MADZ;AAEJC,MAAAA,OAAO,EAAE,SAFL;AAGJC,MAAAA,MAAM,EAAE;AAHJ;AAHG,IAAX;;AAUArB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMsB,OAAO,GAAG,SAAVA,OAAU;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEOhB,YAAY,CAACiB,OAAb,CAAqB,MAArB,CAFP;;AAAA;AAENV,cAAAA,KAFM;AAGZC,cAAAA,OAAO,CAACD,KAAD,CAAP;AAHY;AAAA;;AAAA;AAAA;AAAA;AAKZW,cAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,cAAAA,OAAO,CAACE,GAAR;;AANY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhB;;AASAJ,IAAAA,OAAO;AACR,GAXQ,EAWN,EAXM,CAAT;AAaA,SACE,oBAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAET,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEI,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,aAAa,EAAE;AAAEU,MAAAA,WAAW,EAAE;AAAf,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,SAAnB;AAA6B,IAAA,SAAS,EAAEZ,aAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,SAAS,EAAEC,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF,CADF,CADF;AAYD","sourcesContent":["/**\n * This will be my static creative application for a wordrobe selector\n * Author: Novia Wu\n * Date: 12/6/2021\n */\n\nimport React, { useState, useEffect } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { DefaultTheme, Provider as PaperProvider } from \"react-native-paper\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { AppContext } from \"./AppContext\";\nimport Welcome from \"./screens/Welcome\";\nimport Home from \"./screens/Home\";\n\nexport default function App(props) {\n  const Stack = createNativeStackNavigator();\n  const [user, setUser] = useState(\"\");\n\n  function WelcomeScreen() {\n    return <Welcome />;\n  }\n\n  function HomeScreen() {\n    return <Home />;\n  }\n\n  const theme = {\n    ...DefaultTheme,\n    roundness: 2,\n    colors: {\n      ...DefaultTheme.colors,\n      primary: \"#E89941\",\n      accent: \"#f1c40f\",\n    },\n  };\n\n  useEffect(() => {\n    const getUser = async () => {\n      try {\n        const user = await AsyncStorage.getItem(\"user\");\n        setUser(user);\n      } catch (e) {\n        console.log(\"error in getUser \");\n        console.dir(e);\n      }\n    };\n    getUser();\n  }, []);\n\n  return (\n    <AppContext.Provider value={user}>\n      <PaperProvider theme={theme}>\n        <NavigationContainer>\n          <Stack.Navigator screenOptions={{ headerShown: false }}>\n            <Stack.Screen name=\"Welcome\" component={WelcomeScreen} />\n            <Stack.Screen name=\"Home\" component={HomeScreen} />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </PaperProvider>\n    </AppContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}