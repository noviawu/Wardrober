{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/xiaodanwu/Desktop/7th/CS app dev /Wardrober/screens/ItemCard.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Modal, Portal, Button } from \"react-native-paper\";\nimport { firebaseRealtimeDB, firebaseStorage } from \"../firebase\";\nimport { generateID, uploadImage } from \"../utils/utils\";\n\nvar ItemCard = function ItemCard() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      wardrobe = _useState2[0],\n      setWardrobe = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modalOpen = _useState4[0],\n      setModalOpen = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modalItem = _useState6[0],\n      setModalItem = _useState6[1];\n\n  useEffect(function () {\n    var getWardrobe = function getWardrobe() {\n      firebaseRealtimeDB.ref(\"items\").on(\"value\", function (querySnapshot) {\n        if (querySnapshot.exists()) {\n          var items = Object.values(querySnapshot.val());\n          setWardrobe(items);\n        } else {\n          console.log(\"No items found\");\n        }\n      });\n    };\n\n    getWardrobe();\n  }, []);\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        setModalOpen(true);\n        setModalItem(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      style: styles.listItem,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: styles.itemText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, item.name), React.createElement(Image, {\n      source: {\n        uri: item.image_url\n      },\n      style: styles.photo,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    })));\n  };\n\n  var hideModal = function hideModal() {\n    return setModalOpen(false);\n  };\n\n  var handleDelete = function handleDelete(item) {\n    return _regeneratorRuntime.async(function handleDelete$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"deleted\");\n            firebaseRealtimeDB.ref(\"items\").child(item.id).remove();\n            firebaseStorage.refFromURL(item.image_url).delete();\n            setModalOpen(false);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleFavorite = function handleFavorite(item) {\n    var id, url, newItem;\n    return _regeneratorRuntime.async(function handleFavorite$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log(\"marked as favorite\");\n            id = generateID.getRandomID();\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(uploadImage.uploadImageAsync(item.image_url));\n\n          case 4:\n            url = _context2.sent;\n            newItem = {\n              id: id,\n              name: item.name,\n              category: item.category,\n              brand: item.brand,\n              image_url: url,\n              created_at: Date.now()\n            };\n            firebaseRealtimeDB.ref(\"favorites\").child(id).set(newItem, function (err) {\n              if (err) {\n                Alert.alert(\"Item could not be saved: \" + err);\n              } else {\n                Alert.alert(\"Item saved successfully\");\n              }\n            });\n            hideModal();\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var i = 0;\n  return React.createElement(View, {\n    style: styles.list,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    style: {\n      alignSelf: \"flex-start\"\n    },\n    data: wardrobe,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor() {\n      var key = i++;\n      return key.toString();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }), modalOpen ? React.createElement(Portal, {\n    style: {\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, React.createElement(Modal, {\n    visible: modalOpen,\n    onDismiss: hideModal,\n    contentContainerStyle: styles.modal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.itemName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, modalItem.name), React.createElement(Image, {\n    source: {\n      uri: modalItem.image_url\n    },\n    style: styles.modalImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.itemDes,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, \"Category: \", modalItem.category, \" \", \"\\n\", \" Brand: \", modalItem.brand), React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    style: styles.button,\n    mode: \"contained\",\n    compact: true,\n    onPress: function onPress() {\n      handleFavorite(modalItem);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontFamily: \"Cochin\",\n      color: \"black\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, \"Favorite\")), React.createElement(Button, {\n    style: styles.button,\n    mode: \"contained\",\n    compact: true,\n    onPress: function onPress() {\n      handleDelete(modalItem);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontFamily: \"Cochin\",\n      color: \"black\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, \"Delete\"))))) : null);\n};\n\nvar styles = StyleSheet.create({\n  list: {\n    flex: 5,\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  listItem: {\n    padding: 20,\n    marginVertical: 5,\n    width: 350,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  itemText: {\n    fontSize: 28,\n    fontFamily: \"Cochin\"\n  },\n  photo: {\n    width: 300,\n    height: 300\n  },\n  modal: {\n    backgroundColor: \"white\",\n    padding: 20,\n    margin: 20,\n    height: 450,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  itemName: {\n    fontSize: 28,\n    fontFamily: \"Cochin\",\n    color: \"black\"\n  },\n  itemDes: {\n    fontSize: 20,\n    fontFamily: \"Cochin\",\n    color: \"black\"\n  },\n  modalImage: {\n    width: 200,\n    height: 200\n  },\n  button: {\n    marginVertical: 10,\n    marginHorizontal: 20\n  }\n});\nexport default ItemCard;","map":{"version":3,"sources":["/Users/xiaodanwu/Desktop/7th/CS app dev /Wardrober/screens/ItemCard.js"],"names":["React","useState","useEffect","Modal","Portal","Button","firebaseRealtimeDB","firebaseStorage","generateID","uploadImage","ItemCard","wardrobe","setWardrobe","modalOpen","setModalOpen","modalItem","setModalItem","getWardrobe","ref","on","querySnapshot","exists","items","Object","values","val","console","log","renderItem","item","styles","listItem","itemText","name","uri","image_url","photo","hideModal","handleDelete","child","id","remove","refFromURL","delete","handleFavorite","getRandomID","uploadImageAsync","url","newItem","category","brand","created_at","Date","now","set","err","Alert","alert","i","list","alignSelf","key","toString","justifyContent","alignItems","modal","itemName","modalImage","itemDes","flexDirection","button","fontFamily","color","StyleSheet","create","flex","padding","marginVertical","width","fontSize","height","backgroundColor","margin","marginHorizontal"],"mappings":"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","sourcesContent":["/**\n * This is the item card that will display the items' information\n * Author: Novia Wu\n * Date: 12/2/2021\n */\nimport React, { useState, useEffect } from \"react\";\nimport {\n  Text,\n  View,\n  FlatList,\n  StyleSheet,\n  Alert,\n  Image,\n  TouchableOpacity,\n} from \"react-native\";\nimport { Modal, Portal, Button } from \"react-native-paper\";\nimport { firebaseRealtimeDB, firebaseStorage } from \"../firebase\";\nimport { generateID, uploadImage } from \"../utils/utils\";\n\nconst ItemCard = () => {\n  const [wardrobe, setWardrobe] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [modalItem, setModalItem] = useState();\n\n  useEffect(() => {\n    const getWardrobe = () => {\n      firebaseRealtimeDB.ref(\"items\").on(\"value\", (querySnapshot) => {\n        if (querySnapshot.exists()) {\n          const items = Object.values(querySnapshot.val());\n          setWardrobe(items);\n        } else {\n          console.log(\"No items found\");\n        }\n      });\n    };\n    getWardrobe();\n  }, []);\n\n  const renderItem = ({ item }) => (\n    <TouchableOpacity\n      onPress={() => {\n        setModalOpen(true);\n        setModalItem(item);\n      }}\n    >\n      <View style={styles.listItem}>\n        <Text style={styles.itemText}>{item.name}</Text>\n        <Image\n          source={{\n            uri: item.image_url,\n          }}\n          style={styles.photo}\n        ></Image>\n      </View>\n    </TouchableOpacity>\n  );\n\n  const hideModal = () => setModalOpen(false);\n\n  // delete the item from the database\n  const handleDelete = async (item) => {\n    console.log(\"deleted\");\n    firebaseRealtimeDB.ref(\"items\").child(item.id).remove();\n    firebaseStorage.refFromURL(item.image_url).delete();\n    setModalOpen(false);\n  };\n\n  // add this item to the favorites list\n  const handleFavorite = async (item) => {\n    console.log(\"marked as favorite\");\n    const id = generateID.getRandomID();\n    const url = await uploadImage.uploadImageAsync(item.image_url);\n    // upload the same product to Firebase Realtime Database's favorites column\n    var newItem = {\n      id: id,\n      name: item.name,\n      category: item.category,\n      brand: item.brand,\n      image_url: url,\n      created_at: Date.now(),\n    };\n    firebaseRealtimeDB\n      .ref(\"favorites\")\n      .child(id)\n      .set(newItem, (err) => {\n        if (err) {\n          Alert.alert(\"Item could not be saved: \" + err);\n        } else {\n          Alert.alert(\"Item saved successfully\");\n        }\n      });\n    hideModal();\n  };\n\n  let i = 0;\n  return (\n    <View style={styles.list}>\n      <FlatList\n        style={{ alignSelf: \"flex-start\" }}\n        data={wardrobe}\n        renderItem={renderItem}\n        keyExtractor={() => {\n          const key = i++;\n          return key.toString();\n        }}\n      />\n      {modalOpen ? (\n        <Portal style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n          <Modal\n            visible={modalOpen}\n            onDismiss={hideModal}\n            contentContainerStyle={styles.modal}\n          >\n            <Text style={styles.itemName}>{modalItem.name}</Text>\n            <Image\n              source={{\n                uri: modalItem.image_url,\n              }}\n              style={styles.modalImage}\n            ></Image>\n            <Text style={styles.itemDes}>\n              Category: {modalItem.category} {\"\\n\"} Brand: {modalItem.brand}\n            </Text>\n            <View style={{ flexDirection: \"row\" }}>\n              <Button\n                style={styles.button}\n                mode=\"contained\"\n                compact={true}\n                onPress={() => {\n                  handleFavorite(modalItem);\n                }}\n              >\n                <Text style={{ fontFamily: \"Cochin\", color: \"black\" }}>\n                  Favorite\n                </Text>\n              </Button>\n              <Button\n                style={styles.button}\n                mode=\"contained\"\n                compact={true}\n                onPress={() => {\n                  handleDelete(modalItem);\n                }}\n              >\n                <Text style={{ fontFamily: \"Cochin\", color: \"black\" }}>\n                  Delete\n                </Text>\n              </Button>\n            </View>\n          </Modal>\n        </Portal>\n      ) : null}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  list: {\n    flex: 5,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  listItem: {\n    padding: 20,\n    marginVertical: 5,\n    width: 350,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  itemText: {\n    fontSize: 28,\n    fontFamily: \"Cochin\",\n  },\n  photo: {\n    width: 300,\n    height: 300,\n  },\n  modal: {\n    backgroundColor: \"white\",\n    padding: 20,\n    margin: 20,\n    height: 450,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  itemName: {\n    fontSize: 28,\n    fontFamily: \"Cochin\",\n    color: \"black\",\n  },\n  itemDes: {\n    fontSize: 20,\n    fontFamily: \"Cochin\",\n    color: \"black\",\n  },\n  modalImage: {\n    width: 200,\n    height: 200,\n  },\n  button: {\n    marginVertical: 10,\n    marginHorizontal: 20,\n  },\n});\n\nexport default ItemCard;\n"]},"metadata":{},"sourceType":"module"}