{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/xiaodanwu/Desktop/7th/CS app dev /Wardrober/screens/ItemCard.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nvar ItemCard = function ItemCard() {\n  useEffect(function () {\n    getData();\n  }, []);\n\n  var getData = function getData() {\n    var keys, result, data;\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getAllKeys());\n\n          case 3:\n            keys = _context.sent;\n            console.log(keys);\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(AsyncStorage.multiGet(keys));\n\n          case 7:\n            result = _context.sent;\n            console.log(result);\n            return _context.abrupt(\"return\", result.map(function (req) {\n              return JSON.parse(req);\n            }).forEach(console.log));\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"error in getData \");\n            console.dir(_context.t0);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 14]], Promise);\n  };\n\n  return React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }\n  }, \"rendered\");\n};\n\nexport default ItemCard;","map":{"version":3,"sources":["/Users/xiaodanwu/Desktop/7th/CS app dev /Wardrober/screens/ItemCard.js"],"names":["React","useState","useEffect","AsyncStorage","ItemCard","getData","getAllKeys","keys","console","log","multiGet","result","map","req","JSON","parse","forEach","dir"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAKrBF,EAAAA,SAAS,CAAC,YAAM;AACdG,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMA,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAGOF,YAAY,CAACG,UAAb,EAHP;;AAAA;AAGNC,YAAAA,IAHM;AAIZC,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAJY;AAAA,6CAKSJ,YAAY,CAACO,QAAb,CAAsBH,IAAtB,CALT;;AAAA;AAKNI,YAAAA,MALM;AAMZH,YAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AANY,6CAOLA,MAAM,CAACC,GAAP,CAAW,UAACC,GAAD;AAAA,qBAASC,IAAI,CAACC,KAAL,CAAWF,GAAX,CAAT;AAAA,aAAX,EAAqCG,OAArC,CAA6CR,OAAO,CAACC,GAArD,CAPK;;AAAA;AAAA;AAAA;AAsBZD,YAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,YAAAA,OAAO,CAACS,GAAR;;AAvBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AA2BA,SAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,CArCD;;AAuCA,eAAeb,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Text } from \"react-native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst ItemCard = () => {\n  // const [name, setName] = useState(\"\");\n  // const [category, setCategory] = useState(\"\");\n  // const [brand, setBrand] = useState(\"\");\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = async () => {\n    try {\n      //const jsonValue = await AsyncStorage.getItem(\"\");\n      const keys = await AsyncStorage.getAllKeys();\n      console.log(keys);\n      const result = await AsyncStorage.multiGet(keys);\n      console.log(result);\n      return result.map((req) => JSON.parse(req)).forEach(console.log);\n\n      let data = null;\n      if (jsonValue != null) {\n        data = JSON.parse(jsonValue);\n        setName(data.name);\n        setCategory(data.category);\n        setBrand(data.brand);\n      } else {\n        console.log(\"just read a null value from Storage\");\n        setName(\"\");\n        setCategory(\"\");\n        setBrand(\"\");\n      }\n    } catch (e) {\n      console.log(\"error in getData \");\n      console.dir(e);\n    }\n  };\n\n  return <Text>rendered</Text>;\n};\n\nexport default ItemCard;\n"]},"metadata":{},"sourceType":"module"}