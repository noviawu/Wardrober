{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/xiaodanwu/Desktop/7th/CS app dev /Wardrober/screens/Wardrobe.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nvar Wardrobe = function Wardrobe(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      category = _useState4[0],\n      setCategory = _useState4[1];\n\n  useEffect(function () {\n    getData();\n  }, []);\n\n  var storeItem = function storeItem(value) {\n    var jsonValue;\n    return _regeneratorRuntime.async(function storeItem$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            jsonValue = JSON.stringify(value);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"wardrobe_items\", jsonValue));\n\n          case 4:\n            console.log(\"just stored \" + jsonValue);\n            _context.next = 11;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"error in storeData \");\n            console.dir(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var getData = function getData() {\n    var jsonValue, data;\n    return _regeneratorRuntime.async(function getData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"wardrobe_items\"));\n\n          case 3:\n            jsonValue = _context2.sent;\n            data = null;\n\n            if (jsonValue != null) {\n              data = JSON.parse(jsonValue);\n              setName(data.name);\n              setCategory(data.category);\n              console.log(\"just set Name and Category\");\n            } else {\n              console.log(\"just read a null value from Storage\");\n              setName(\"\");\n              setCategory(\"\");\n            }\n\n            _context2.next = 12;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(\"error in getData \");\n            console.dir(_context2.t0);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \" New Item\"), React.createElement(TextInput, {\n    style: styles.textinput,\n    placeholder: \"name\",\n    onChangeText: function onChangeText(text) {\n      setName(text);\n    },\n    value: name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textinput,\n    placeholder: \"category\",\n    onChangeText: function onChangeText(text) {\n      setCategory(text);\n    },\n    value: category,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    color: \"red\",\n    title: \"Save Item\",\n    onPress: function onPress() {\n      console.log(\"saving item\");\n      var theInfo = {\n        name: name,\n        category: category\n      };\n      console.log(\"theInfo=\" + theInfo);\n      console.log(\"data=\" + JSON.stringify(theInfo));\n      storeItem(theInfo);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"name=\", name, \" category=\", category)));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  textinput: {\n    margin: 20,\n    fontSize: 20\n  },\n  header: {\n    fontSize: 40,\n    color: \"blue\"\n  }\n});\nexport default Wardrobe;","map":{"version":3,"sources":["/Users/xiaodanwu/Desktop/7th/CS app dev /Wardrober/screens/Wardrobe.js"],"names":["React","useState","useEffect","AsyncStorage","Wardrobe","props","name","setName","category","setCategory","getData","storeItem","value","jsonValue","JSON","stringify","setItem","console","log","dir","getItem","data","parse","styles","container","header","textinput","text","theInfo","StyleSheet","create","flex","flexDirection","backgroundColor","alignItems","justifyContent","margin","fontSize","color"],"mappings":"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","sourcesContent":["/**\n * This will be the local wardrobe that the user can store items and look over them\n */\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, StyleSheet, Text, TextInput, View } from \"react-native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst Wardrobe = (props) => {\n  const [name, setName] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const storeItem = async (value) => {\n    // this saves the item info in the asych storage\n    try {\n      const jsonValue = JSON.stringify(value);\n      await AsyncStorage.setItem(\"wardrobe_items\", jsonValue);\n      console.log(\"just stored \" + jsonValue);\n    } catch (e) {\n      console.log(\"error in storeData \");\n      console.dir(e);\n    }\n  };\n\n  const getData = async () => {\n    try {\n      // the '@profile_info' can be any string\n      const jsonValue = await AsyncStorage.getItem(\"wardrobe_items\");\n      let data = null;\n      if (jsonValue != null) {\n        data = JSON.parse(jsonValue);\n        setName(data.name);\n        setCategory(data.category);\n        console.log(\"just set Name and Category\");\n      } else {\n        console.log(\"just read a null value from Storage\");\n        setName(\"\");\n        setCategory(\"\");\n      }\n    } catch (e) {\n      console.log(\"error in getData \");\n      console.dir(e);\n      // error reading value\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.header}> New Item</Text>\n      <TextInput\n        style={styles.textinput}\n        placeholder=\"name\"\n        onChangeText={(text) => {\n          setName(text);\n        }}\n        value={name}\n      />\n      <TextInput\n        style={styles.textinput}\n        placeholder=\"category\"\n        onChangeText={(text) => {\n          setCategory(text);\n        }}\n        value={category}\n      />\n      <Button\n        color=\"red\"\n        title=\"Save Item\"\n        onPress={() => {\n          console.log(\"saving item\");\n          const theInfo = { name: name, category: category };\n          console.log(`theInfo=${theInfo}`);\n          console.log(\"data=\" + JSON.stringify(theInfo));\n          storeItem(theInfo);\n        }}\n      />\n      <View>\n        <Text>\n          name={name} category={category}\n        </Text>\n      </View>\n    </View>\n  );\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  textinput: {\n    margin: 20,\n    fontSize: 20,\n  },\n  header: {\n    fontSize: 40,\n    color: \"blue\",\n  },\n});\n\nexport default Wardrobe;\n"]},"metadata":{},"sourceType":"module"}