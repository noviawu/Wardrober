{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/xiaodanwu/Desktop/7th/CS app dev /Wardrober/screens/ItemCard.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nvar ItemCard = function ItemCard() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      wardrobe = _useState2[0],\n      setWardrobe = _useState2[1];\n\n  useEffect(function () {\n    getData();\n  }, []);\n\n  var getData = function getData() {\n    var keys, result, a;\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getAllKeys());\n\n          case 3:\n            keys = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(AsyncStorage.multiGet(keys));\n\n          case 6:\n            result = _context.sent;\n            a = result.map(function (req) {\n              return JSON.parse(req[1]);\n            });\n            console.log(a);\n            setWardrobe(a);\n            _context.next = 16;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"error in getData \");\n            console.dir(_context.t0);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    return React.createElement(View, {\n      style: styles.listItem,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }\n    }, React.createElement(Text, {\n      style: styles.itemText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, item.name));\n  };\n\n  var i = 0;\n  return React.createElement(View, {\n    style: styles.list,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    style: {\n      alignSelf: \"flex-start\"\n    },\n    data: wardrobe,\n    renderItem: renderItem,\n    key: i++,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  list: {\n    flex: 5,\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  listItem: {\n    backgroundColor: \"#F8DE90\",\n    padding: 20,\n    marginVertical: 5\n  },\n  itemText: {\n    fontSize: 28\n  }\n});\nexport default ItemCard;","map":{"version":3,"sources":["/Users/xiaodanwu/Desktop/7th/CS app dev /Wardrober/screens/ItemCard.js"],"names":["React","useState","useEffect","AsyncStorage","ItemCard","wardrobe","setWardrobe","getData","getAllKeys","keys","multiGet","result","a","map","req","JSON","parse","console","log","dir","renderItem","item","styles","listItem","itemText","name","i","list","alignSelf","StyleSheet","create","flex","flexDirection","alignItems","backgroundColor","padding","marginVertical","fontSize"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAIrB,kBAAgCH,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOI,QAAP;AAAA,MAAiBC,WAAjB;;AAEAJ,EAAAA,SAAS,CAAC,YAAM;AACdK,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMA,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEOJ,YAAY,CAACK,UAAb,EAFP;;AAAA;AAENC,YAAAA,IAFM;AAAA;AAAA,6CAGSN,YAAY,CAACO,QAAb,CAAsBD,IAAtB,CAHT;;AAAA;AAGNE,YAAAA,MAHM;AAINC,YAAAA,CAJM,GAIFD,MAAM,CAACE,GAAP,CAAW,UAACC,GAAD;AAAA,qBAASC,IAAI,CAACC,KAAL,CAAWF,GAAG,CAAC,CAAD,CAAd,CAAT;AAAA,aAAX,CAJE;AAKZG,YAAAA,OAAO,CAACC,GAAR,CAAYN,CAAZ;AACAN,YAAAA,WAAW,CAACM,CAAD,CAAX;AANY;AAAA;;AAAA;AAAA;AAAA;AAQZK,YAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,YAAAA,OAAO,CAACE,GAAR;;AATY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAaA,MAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,QAAGC,IAAH,QAAGA,IAAH;AAAA,WACjB,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BH,IAAI,CAACI,IAApC,CADF,CADiB;AAAA,GAAnB;;AAMA,MAAIC,CAAC,GAAG,CAAR;AACA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KADT;AAEE,IAAA,IAAI,EAAEvB,QAFR;AAGE,IAAA,UAAU,EAAEe,UAHd;AAIE,IAAA,GAAG,EAAEM,CAAC,EAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF;AAoBD,CAlDD;;AAoDA,IAAMJ,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,IAAI,EAAE;AACJI,IAAAA,IAAI,EAAE,CADF;AAEJC,IAAAA,aAAa,EAAE,QAFX;AAGJC,IAAAA,UAAU,EAAE;AAHR,GADyB;AAM/BV,EAAAA,QAAQ,EAAE;AACRW,IAAAA,eAAe,EAAE,SADT;AAERC,IAAAA,OAAO,EAAE,EAFD;AAGRC,IAAAA,cAAc,EAAE;AAHR,GANqB;AAW/BZ,EAAAA,QAAQ,EAAE;AACRa,IAAAA,QAAQ,EAAE;AADF;AAXqB,CAAlB,CAAf;AAgBA,eAAejC,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Text, View, FlatList, StyleSheet } from \"react-native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst ItemCard = () => {\n  // const [name, setName] = useState(\"\");\n  // const [category, setCategory] = useState(\"\");\n  // const [brand, setBrand] = useState(\"\");\n  const [wardrobe, setWardrobe] = useState([]);\n\n  useEffect(() => {\n    getData();\n  }, []); // i think i need to change the re-render frequency bc it goes into a loop here\n\n  const getData = async () => {\n    try {\n      const keys = await AsyncStorage.getAllKeys();\n      const result = await AsyncStorage.multiGet(keys);\n      const a = result.map((req) => JSON.parse(req[1]));\n      console.log(a);\n      setWardrobe(a);\n    } catch (e) {\n      console.log(\"error in getData \");\n      console.dir(e);\n    }\n  };\n\n  const renderItem = ({ item }) => (\n    <View style={styles.listItem}>\n      <Text style={styles.itemText}>{item.name}</Text>\n    </View>\n  );\n\n  let i = 0;\n  return (\n    <View style={styles.list}>\n      {/* {wardrobe.map((item) => {\n        return (\n          <View key={i++}>\n            <Text>\n              Name: {item.name} , Category: {item.category} , Brand:{\" \"}\n              {item.brand}\n            </Text>\n          </View>\n        );\n      })} */}\n      <FlatList\n        style={{ alignSelf: \"flex-start\" }}\n        data={wardrobe}\n        renderItem={renderItem}\n        key={i++}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  list: {\n    flex: 5,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  listItem: {\n    backgroundColor: \"#F8DE90\",\n    padding: 20,\n    marginVertical: 5,\n  },\n  itemText: {\n    fontSize: 28,\n  },\n});\n\nexport default ItemCard;\n"]},"metadata":{},"sourceType":"module"}